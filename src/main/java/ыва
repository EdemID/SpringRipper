#include <iostream>
#include <algorithm>

using namespace std;

int main() {
    long long n, m, c2, c5;
    cin >> n >> m >> c2 >> c5;

    if (n >= m) {
        // Если портов достаточно для всех гаджетов
        cout << 0 << endl;
        return 0;
    }

    // Нам нужно подключить (m - n) дополнительных гаджетов
    long long needed = m - n;

    // Минимальная стоимость
    long long min_cost = LLONG_MAX;

    // Пробуем использовать k хабов, а остальные порты дополнять разветвителями
    for (long long k = 0; k <= needed / 4 + 1; ++k) {
        long long total_ports = n + k * 4; // Порты от хабов
        long long remaining_needed = needed - k * 4; // Оставшиеся порты, которые нужно подключить

        // Проверяем, если с k хабами все еще недостаточно портов
        if (total_ports >= m) {
            long long cost = k * c5; // стоимость хабов
            min_cost = min(min_cost, cost);
        } else {
            // Необходимы разветвители для оставшихся портов
            remaining_needed = max(0LL, remaining_needed);
            long long cost = k * c5 + (remaining_needed) * c2; // стоимость хабов + стоимость разветвителей
            min_cost = min(min_cost, cost);
        }
    }

    cout << min_cost << endl;
    return 0;
}
